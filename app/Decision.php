<?php

namespace App;

use App\Scopes\ParentScope;
use App\Scopes\ServiceStatusScope;
use App\Scopes\SupervisorScope;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Spatie\Activitylog\Traits\LogsActivity;

class Decision extends Model
{

    use SoftDeletes;
    use LogsActivity;


    protected $guarded = [];
    protected static $logUnguarded = true;
    protected static $logOnlyDirty  = true;
    public function decisionable(): \Illuminate\Database\Eloquent\Relations\MorphTo
    {
        return $this->morphTo();
    }


    protected static function booted()
    {
        parent::booted(); // TODO: Change the autogenerated stub
        static::addGlobalScope(new ParentScope());

        static::creating(static function ($model) {
            $model->company_id = Company::companyID();
        });

        static::deleting(function ($request) {
            $request->requestable->delete();
        });
    }

    public function getTypeAttribute()
    {
        $type = '';
        switch ($this->decisionable_type) {
            case "App\\EndService":
                $type = __('End Service');
                break;
        }
        return $type;
    }

    public function employee()
    {
        return $this->belongsTo(Employee::class)->withoutGlobalScopes([ServiceStatusScope::class, SupervisorScope::class]);
    }
}
